// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Integration {
  id          String   @id @default(cuid())
  name        String
  description String?
  category    String
  icon        String?
  status      IntegrationStatus @default(AVAILABLE)
  authType    AuthType         @default(API_KEY)
  configSchema Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userIntegrations UserIntegration[]
}

model UserIntegration {
  id            String   @id @default(cuid())
  userId        String
  integrationId String
  status        ConnectionStatus @default(DISCONNECTED)
  credentials   Json?
  configuration Json?
  connectedAt   DateTime?
  disconnectedAt DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  integration Integration @relation(fields: [integrationId], references: [id], onDelete: Cascade)

  @@unique([userId, integrationId])
}

model User {
  id              String            @id @default(cuid())
  email           String            @unique
  name            String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  userIntegrations UserIntegration[]
}

enum IntegrationStatus {
  AVAILABLE
  BETA
  DEPRECATED
  MAINTENANCE
}

enum AuthType {
  API_KEY
  OAUTH
  WEBHOOK
  BASIC_AUTH
}

enum ConnectionStatus {
  DISCONNECTED
  CONNECTING
  CONNECTED
  ERROR
}